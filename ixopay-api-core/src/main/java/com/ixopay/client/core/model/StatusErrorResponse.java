/*
 * IXOPAY Payment Platform
 * IXOPAY Payment Platform
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@ixopay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ixopay.client.core.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ixopay.client.core.model.MaybeStatusResponse;
import com.ixopay.client.core.model.StatusErrorResponse;
import com.ixopay.client.core.model.StatusResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ixopay.client.core.client.JSON;
/**
 * StatusErrorResponse
 */
@JsonPropertyOrder({
  StatusErrorResponse.JSON_PROPERTY_ERROR_MESSAGE,
  StatusErrorResponse.JSON_PROPERTY_ERROR_CODE,
  StatusErrorResponse.JSON_PROPERTY_ADAPTER_MESSAGE,
  StatusErrorResponse.JSON_PROPERTY_ADAPTER_CODE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegenWithComposedSchema")
@JsonIgnoreProperties(
  value = "success", // ignore manually set success, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the success to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "success", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = StatusErrorResponse.class, name = "false"),
  @JsonSubTypes.Type(value = StatusResponse.class, name = "true"),
})

public class StatusErrorResponse extends MaybeStatusResponse {
  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  private String errorMessage;

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  private Integer errorCode;

  public static final String JSON_PROPERTY_ADAPTER_MESSAGE = "adapterMessage";
  private String adapterMessage;

  public static final String JSON_PROPERTY_ADAPTER_CODE = "adapterCode";
  private String adapterCode;

  public StatusErrorResponse() { 
  }

  public StatusErrorResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public StatusErrorResponse errorCode(Integer errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }


  public StatusErrorResponse adapterMessage(String adapterMessage) {
    this.adapterMessage = adapterMessage;
    return this;
  }

   /**
   * Get adapterMessage
   * @return adapterMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADAPTER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdapterMessage() {
    return adapterMessage;
  }


  @JsonProperty(JSON_PROPERTY_ADAPTER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdapterMessage(String adapterMessage) {
    this.adapterMessage = adapterMessage;
  }


  public StatusErrorResponse adapterCode(String adapterCode) {
    this.adapterCode = adapterCode;
    return this;
  }

   /**
   * Get adapterCode
   * @return adapterCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADAPTER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdapterCode() {
    return adapterCode;
  }


  @JsonProperty(JSON_PROPERTY_ADAPTER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdapterCode(String adapterCode) {
    this.adapterCode = adapterCode;
  }


  /**
   * Return true if this StatusErrorResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusErrorResponse statusErrorResponse = (StatusErrorResponse) o;
    return Objects.equals(this.errorMessage, statusErrorResponse.errorMessage) &&
        Objects.equals(this.errorCode, statusErrorResponse.errorCode) &&
        Objects.equals(this.adapterMessage, statusErrorResponse.adapterMessage) &&
        Objects.equals(this.adapterCode, statusErrorResponse.adapterCode) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorMessage, errorCode, adapterMessage, adapterCode, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusErrorResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    adapterMessage: ").append(toIndentedString(adapterMessage)).append("\n");
    sb.append("    adapterCode: ").append(toIndentedString(adapterCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("false", StatusErrorResponse.class);
  mappings.put("true", StatusResponse.class);
  mappings.put("StatusErrorResponse", StatusErrorResponse.class);
  JSON.registerDiscriminator(StatusErrorResponse.class, "success", mappings);
}
}

