/*
 * IXOPAY Payment Platform
 * IXOPAY Payment Platform
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@ixopay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ixopay.client.core.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DccData
 */
@JsonPropertyOrder({
  DccData.JSON_PROPERTY_REMOTE_IDENTIFIER,
  DccData.JSON_PROPERTY_ORIGINAL_AMOUNT,
  DccData.JSON_PROPERTY_ORIGINAL_CURRENCY,
  DccData.JSON_PROPERTY_CONVERTED_AMOUNT,
  DccData.JSON_PROPERTY_CONVERTED_CURRENCY,
  DccData.JSON_PROPERTY_CONVERSION_RATE,
  DccData.JSON_PROPERTY_SELECTED_CURRENCY,
  DccData.JSON_PROPERTY_MARK_UP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegenWithComposedSchema")
public class DccData {
  public static final String JSON_PROPERTY_REMOTE_IDENTIFIER = "remoteIdentifier";
  private String remoteIdentifier;

  public static final String JSON_PROPERTY_ORIGINAL_AMOUNT = "originalAmount";
  private String originalAmount;

  public static final String JSON_PROPERTY_ORIGINAL_CURRENCY = "originalCurrency";
  private String originalCurrency;

  public static final String JSON_PROPERTY_CONVERTED_AMOUNT = "convertedAmount";
  private String convertedAmount;

  public static final String JSON_PROPERTY_CONVERTED_CURRENCY = "convertedCurrency";
  private String convertedCurrency;

  public static final String JSON_PROPERTY_CONVERSION_RATE = "conversionRate";
  private BigDecimal conversionRate;

  public static final String JSON_PROPERTY_SELECTED_CURRENCY = "selectedCurrency";
  private String selectedCurrency;

  public static final String JSON_PROPERTY_MARK_UP = "markUp";
  private BigDecimal markUp;

  public DccData() { 
  }

  public DccData remoteIdentifier(String remoteIdentifier) {
    this.remoteIdentifier = remoteIdentifier;
    return this;
  }

   /**
   * Get remoteIdentifier
   * @return remoteIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REMOTE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemoteIdentifier() {
    return remoteIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_REMOTE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoteIdentifier(String remoteIdentifier) {
    this.remoteIdentifier = remoteIdentifier;
  }


  public DccData originalAmount(String originalAmount) {
    this.originalAmount = originalAmount;
    return this;
  }

   /**
   * Get originalAmount
   * @return originalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalAmount() {
    return originalAmount;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalAmount(String originalAmount) {
    this.originalAmount = originalAmount;
  }


  public DccData originalCurrency(String originalCurrency) {
    this.originalCurrency = originalCurrency;
    return this;
  }

   /**
   * Get originalCurrency
   * @return originalCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalCurrency() {
    return originalCurrency;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalCurrency(String originalCurrency) {
    this.originalCurrency = originalCurrency;
  }


  public DccData convertedAmount(String convertedAmount) {
    this.convertedAmount = convertedAmount;
    return this;
  }

   /**
   * Get convertedAmount
   * @return convertedAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConvertedAmount() {
    return convertedAmount;
  }


  @JsonProperty(JSON_PROPERTY_CONVERTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvertedAmount(String convertedAmount) {
    this.convertedAmount = convertedAmount;
  }


  public DccData convertedCurrency(String convertedCurrency) {
    this.convertedCurrency = convertedCurrency;
    return this;
  }

   /**
   * Get convertedCurrency
   * @return convertedCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERTED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConvertedCurrency() {
    return convertedCurrency;
  }


  @JsonProperty(JSON_PROPERTY_CONVERTED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvertedCurrency(String convertedCurrency) {
    this.convertedCurrency = convertedCurrency;
  }


  public DccData conversionRate(BigDecimal conversionRate) {
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * Get conversionRate
   * @return conversionRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getConversionRate() {
    return conversionRate;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversionRate(BigDecimal conversionRate) {
    this.conversionRate = conversionRate;
  }


  public DccData selectedCurrency(String selectedCurrency) {
    this.selectedCurrency = selectedCurrency;
    return this;
  }

   /**
   * Get selectedCurrency
   * @return selectedCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SELECTED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelectedCurrency() {
    return selectedCurrency;
  }


  @JsonProperty(JSON_PROPERTY_SELECTED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedCurrency(String selectedCurrency) {
    this.selectedCurrency = selectedCurrency;
  }


  public DccData markUp(BigDecimal markUp) {
    this.markUp = markUp;
    return this;
  }

   /**
   * Get markUp
   * @return markUp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARK_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMarkUp() {
    return markUp;
  }


  @JsonProperty(JSON_PROPERTY_MARK_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarkUp(BigDecimal markUp) {
    this.markUp = markUp;
  }


  /**
   * Return true if this DccData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DccData dccData = (DccData) o;
    return Objects.equals(this.remoteIdentifier, dccData.remoteIdentifier) &&
        Objects.equals(this.originalAmount, dccData.originalAmount) &&
        Objects.equals(this.originalCurrency, dccData.originalCurrency) &&
        Objects.equals(this.convertedAmount, dccData.convertedAmount) &&
        Objects.equals(this.convertedCurrency, dccData.convertedCurrency) &&
        Objects.equals(this.conversionRate, dccData.conversionRate) &&
        Objects.equals(this.selectedCurrency, dccData.selectedCurrency) &&
        Objects.equals(this.markUp, dccData.markUp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remoteIdentifier, originalAmount, originalCurrency, convertedAmount, convertedCurrency, conversionRate, selectedCurrency, markUp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DccData {\n");
    sb.append("    remoteIdentifier: ").append(toIndentedString(remoteIdentifier)).append("\n");
    sb.append("    originalAmount: ").append(toIndentedString(originalAmount)).append("\n");
    sb.append("    originalCurrency: ").append(toIndentedString(originalCurrency)).append("\n");
    sb.append("    convertedAmount: ").append(toIndentedString(convertedAmount)).append("\n");
    sb.append("    convertedCurrency: ").append(toIndentedString(convertedCurrency)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    selectedCurrency: ").append(toIndentedString(selectedCurrency)).append("\n");
    sb.append("    markUp: ").append(toIndentedString(markUp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

