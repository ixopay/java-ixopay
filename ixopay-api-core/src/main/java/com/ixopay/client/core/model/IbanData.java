/*
 * IXOPAY Payment Platform
 * IXOPAY Payment Platform
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@ixopay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ixopay.client.core.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ixopay.client.core.model.CardData;
import com.ixopay.client.core.model.IbanData;
import com.ixopay.client.core.model.PhoneData;
import com.ixopay.client.core.model.ReturnData;
import com.ixopay.client.core.model.ReturnDataType;
import com.ixopay.client.core.model.WalletData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ixopay.client.core.client.JSON;
/**
 * IbanData
 */
@JsonPropertyOrder({
  IbanData.JSON_PROPERTY_ACCOUNT_OWNER,
  IbanData.JSON_PROPERTY_IBAN,
  IbanData.JSON_PROPERTY_BIC,
  IbanData.JSON_PROPERTY_MANDATE_ID,
  IbanData.JSON_PROPERTY_MANDATE_DATE,
  IbanData.JSON_PROPERTY_BANK_NAME,
  IbanData.JSON_PROPERTY_BANK_BRANCH_NAME,
  IbanData.JSON_PROPERTY_COUNTRY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "_TYPE", // ignore manually set _TYPE, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the _TYPE to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "_TYPE", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CardData.class, name = "cardData"),
  @JsonSubTypes.Type(value = IbanData.class, name = "ibanData"),
  @JsonSubTypes.Type(value = PhoneData.class, name = "phoneData"),
  @JsonSubTypes.Type(value = WalletData.class, name = "walletData"),
})

public class IbanData extends ReturnData {
  public static final String JSON_PROPERTY_ACCOUNT_OWNER = "accountOwner";
  private String accountOwner;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_BIC = "bic";
  private String bic;

  public static final String JSON_PROPERTY_MANDATE_ID = "mandateId";
  private String mandateId;

  public static final String JSON_PROPERTY_MANDATE_DATE = "mandateDate";
  private LocalDate mandateDate;

  public static final String JSON_PROPERTY_BANK_NAME = "bankName";
  private String bankName;

  public static final String JSON_PROPERTY_BANK_BRANCH_NAME = "bankBranchName";
  private String bankBranchName;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public IbanData() { 
  }

  public IbanData accountOwner(String accountOwner) {
    this.accountOwner = accountOwner;
    return this;
  }

   /**
   * Get accountOwner
   * @return accountOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountOwner() {
    return accountOwner;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountOwner(String accountOwner) {
    this.accountOwner = accountOwner;
  }


  public IbanData iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * Get iban
   * @return iban
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }


  public IbanData bic(String bic) {
    this.bic = bic;
    return this;
  }

   /**
   * Get bic
   * @return bic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBic() {
    return bic;
  }


  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBic(String bic) {
    this.bic = bic;
  }


  public IbanData mandateId(String mandateId) {
    this.mandateId = mandateId;
    return this;
  }

   /**
   * Get mandateId
   * @return mandateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANDATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMandateId() {
    return mandateId;
  }


  @JsonProperty(JSON_PROPERTY_MANDATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandateId(String mandateId) {
    this.mandateId = mandateId;
  }


  public IbanData mandateDate(LocalDate mandateDate) {
    this.mandateDate = mandateDate;
    return this;
  }

   /**
   * Get mandateDate
   * @return mandateDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getMandateDate() {
    return mandateDate;
  }


  @JsonProperty(JSON_PROPERTY_MANDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandateDate(LocalDate mandateDate) {
    this.mandateDate = mandateDate;
  }


  public IbanData bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Get bankName
   * @return bankName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BANK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankName() {
    return bankName;
  }


  @JsonProperty(JSON_PROPERTY_BANK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankName(String bankName) {
    this.bankName = bankName;
  }


  public IbanData bankBranchName(String bankBranchName) {
    this.bankBranchName = bankBranchName;
    return this;
  }

   /**
   * Get bankBranchName
   * @return bankBranchName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BANK_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBankBranchName() {
    return bankBranchName;
  }


  @JsonProperty(JSON_PROPERTY_BANK_BRANCH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankBranchName(String bankBranchName) {
    this.bankBranchName = bankBranchName;
  }


  public IbanData country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  /**
   * Return true if this ibanData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IbanData ibanData = (IbanData) o;
    return Objects.equals(this.accountOwner, ibanData.accountOwner) &&
        Objects.equals(this.iban, ibanData.iban) &&
        Objects.equals(this.bic, ibanData.bic) &&
        Objects.equals(this.mandateId, ibanData.mandateId) &&
        Objects.equals(this.mandateDate, ibanData.mandateDate) &&
        Objects.equals(this.bankName, ibanData.bankName) &&
        Objects.equals(this.bankBranchName, ibanData.bankBranchName) &&
        Objects.equals(this.country, ibanData.country) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountOwner, iban, bic, mandateId, mandateDate, bankName, bankBranchName, country, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IbanData {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountOwner: ").append(toIndentedString(accountOwner)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    mandateId: ").append(toIndentedString(mandateId)).append("\n");
    sb.append("    mandateDate: ").append(toIndentedString(mandateDate)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankBranchName: ").append(toIndentedString(bankBranchName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("cardData", CardData.class);
  mappings.put("ibanData", IbanData.class);
  mappings.put("phoneData", PhoneData.class);
  mappings.put("walletData", WalletData.class);
  mappings.put("ibanData", IbanData.class);
  JSON.registerDiscriminator(IbanData.class, "_TYPE", mappings);
}
}

