/*
 * IXOPAY Payment Platform
 * IXOPAY Payment Platform
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@ixopay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ixopay.core.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ixopay.core.model.ErrorType;
import com.ixopay.core.model.MaybeTransactionResponse;
import com.ixopay.core.model.TransactionErrorResponse;
import com.ixopay.core.model.TransactionResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ixopay.core.client.JSON;
/**
 * TransactionErrorResponse
 */
@JsonPropertyOrder({
  TransactionErrorResponse.JSON_PROPERTY_ERROR_MESSAGE,
  TransactionErrorResponse.JSON_PROPERTY_ERROR_CODE,
  TransactionErrorResponse.JSON_PROPERTY_ADAPTER_MESSAGE,
  TransactionErrorResponse.JSON_PROPERTY_ADAPTER_CODE,
  TransactionErrorResponse.JSON_PROPERTY_RETURN_TYPE,
  TransactionErrorResponse.JSON_PROPERTY_ERRORS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "success", // ignore manually set success, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the success to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "success", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = TransactionErrorResponse.class, name = "false"),
  @JsonSubTypes.Type(value = TransactionResponse.class, name = "true"),
})

public class TransactionErrorResponse extends MaybeTransactionResponse {
  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  private String errorMessage;

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  private Integer errorCode;

  public static final String JSON_PROPERTY_ADAPTER_MESSAGE = "adapterMessage";
  private String adapterMessage;

  public static final String JSON_PROPERTY_ADAPTER_CODE = "adapterCode";
  private String adapterCode;

  /**
   * Gets or Sets returnType
   */
  public enum ReturnTypeEnum {
    ERROR("ERROR");

    private String value;

    ReturnTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReturnTypeEnum fromValue(String value) {
      for (ReturnTypeEnum b : ReturnTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RETURN_TYPE = "returnType";
  private ReturnTypeEnum returnType;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<ErrorType> errors = null;

  public TransactionErrorResponse() { 
  }

  public TransactionErrorResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public TransactionErrorResponse errorCode(Integer errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }


  public TransactionErrorResponse adapterMessage(String adapterMessage) {
    this.adapterMessage = adapterMessage;
    return this;
  }

   /**
   * Get adapterMessage
   * @return adapterMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADAPTER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdapterMessage() {
    return adapterMessage;
  }


  @JsonProperty(JSON_PROPERTY_ADAPTER_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdapterMessage(String adapterMessage) {
    this.adapterMessage = adapterMessage;
  }


  public TransactionErrorResponse adapterCode(String adapterCode) {
    this.adapterCode = adapterCode;
    return this;
  }

   /**
   * Get adapterCode
   * @return adapterCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADAPTER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdapterCode() {
    return adapterCode;
  }


  @JsonProperty(JSON_PROPERTY_ADAPTER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdapterCode(String adapterCode) {
    this.adapterCode = adapterCode;
  }


  public TransactionErrorResponse returnType(ReturnTypeEnum returnType) {
    this.returnType = returnType;
    return this;
  }

   /**
   * Get returnType
   * @return returnType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReturnTypeEnum getReturnType() {
    return returnType;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnType(ReturnTypeEnum returnType) {
    this.returnType = returnType;
  }


  public TransactionErrorResponse errors(List<ErrorType> errors) {
    this.errors = errors;
    return this;
  }

  public TransactionErrorResponse addErrorsItem(ErrorType errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ErrorType> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(List<ErrorType> errors) {
    this.errors = errors;
  }


  /**
   * Return true if this TransactionErrorResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionErrorResponse transactionErrorResponse = (TransactionErrorResponse) o;
    return Objects.equals(this.errorMessage, transactionErrorResponse.errorMessage) &&
        Objects.equals(this.errorCode, transactionErrorResponse.errorCode) &&
        Objects.equals(this.adapterMessage, transactionErrorResponse.adapterMessage) &&
        Objects.equals(this.adapterCode, transactionErrorResponse.adapterCode) &&
        Objects.equals(this.returnType, transactionErrorResponse.returnType) &&
        Objects.equals(this.errors, transactionErrorResponse.errors) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorMessage, errorCode, adapterMessage, adapterCode, returnType, errors, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionErrorResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    adapterMessage: ").append(toIndentedString(adapterMessage)).append("\n");
    sb.append("    adapterCode: ").append(toIndentedString(adapterCode)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("false", TransactionErrorResponse.class);
  mappings.put("true", TransactionResponse.class);
  mappings.put("TransactionErrorResponse", TransactionErrorResponse.class);
  JSON.registerDiscriminator(TransactionErrorResponse.class, "success", mappings);
}
}

